---
---

<header
  id="page-header"
  class="absolute bottom-0 z-20 flex w-full items-center justify-between border-b border-transparent px-8 py-4 text-white"
>
  <div class="grid grid-flow-col gap-4 place-items-center" >
    <p class="font-bold">Built With</p>

    <a class="flex items-center gap-3 hover:!text-default" href="https://astro.build/" target="_blank">
      <div class="i-vscode-icons:file-type-astro size-12"></div>
    </a>
    <a class="flex items-center gap-3 hover:!text-default" href="https://svelte.dev/" target="_blank">
      <div class="i-vscode-icons:file-type-svelte size-12"></div>
    </a>
    <a class="flex items-center gap-3 hover:!text-default" href="https://unocss.dev/" target="_blank">
      <div class="i-vscode-icons:file-type-unocss size-12"></div>
    </a>
    <a class="flex items-center gap-3 hover:!text-default" href="https://daisyui.com/" target="_blank">
      <div class="i-logos:daisyui-icon size-12"></div>
    </a>
  </div>
  
</header>

<script>
  import MicroModal from "micromodal";
  import invariant from "tiny-invariant";

  const menuModalId = "menu-modal";

  const header = document.querySelector("#page-header") as HTMLElement;
  const page = document.documentElement;
  const menu = document.querySelector(`#${menuModalId} ul`);
  const openNavButton = document.querySelector("#open-nav-button");
  const closeNavButton = document.querySelector("#close-nav-button");

  invariant(header, "header should not be null");
  invariant(menu, "menu should not be null");
  invariant(openNavButton, "openNavButton should not be null");
  invariant(closeNavButton, "closeNavButton should not be null");

  const openMenu = () => {
    MicroModal.show(menuModalId, { disableScroll: true });
  };

  const closeMenu = () => {
    MicroModal.close(menuModalId);
  };

  openNavButton.addEventListener("click", openMenu);
  closeNavButton.addEventListener("click", closeMenu);

  document.addEventListener("scroll", () => {
    const d = page.clientHeight - page.scrollTop - header.offsetHeight;
    header.classList.toggle("fixed-header", d < 0);
  });

  menu.addEventListener("click", (event) => {
    if ((event.target as HTMLElement).tagName === "A") {
      closeMenu();
    }
  });
</script>

<noscript>
  <style>
    #open-nav-button {
      display: none;
    }
  </style>
</noscript>

<style>
  .fixed-header {
    @apply fixed bottom-auto top-0;
  }
  .modal.is-open {
    @apply block;
  }
</style>
